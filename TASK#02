QS#2:
Perform data cleaning and exploratory data analysis (EDA) on a dataset of your choice, such as the Titanic dataset from Kaggle. Explore the relationships between variables and identify patterns and trends in the data.

import pandas as pd
data = pd.read_csv(r"C:\Users\ARSALAN\INTERNHSIP\Titanic-Dataset.csv")
data.columns
data.info()
data.describe
data.shape
null_values = data.isnull()
null_counts = null_values.sum()
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
# Create a heatmap to visualize missing values
plt.figure(figsize=(10, 6))  # Adjust the figure size as needed
sns.heatmap(null_values, cbar=False, cmap='viridis')
plt.title('Missing Values Heatmap')
plt.show()
mean_age = data['Age'].mean()
data['Age'].fillna(mean_age, inplace=True)
mode_cabin = data['Cabin'].mode()[0]
data['Cabin'].fillna(mode_cabin, inplace=True)
# Check for null values
null = data.isnull().sum()

# Display the count of null values for each column
print("Null Values in Each Column:")
print(null)
mode_embarked = data['Embarked'].mode()[0]
data['Embarked'].fillna(mode_embarked, inplace=True)
import seaborn as sns
import matplotlib.pyplot as plt

sns.barplot(x="Pclass", y="Survived", data=data)
plt.title("Survival Rate by Passenger Class")
plt.show()

sns.barplot(x="Sex", y="Survived", data=data)
plt.title("Survival Rate by Gender")
plt.show()

data['AgeGroup'] = pd.cut(data['Age'], bins=[0, 18, 35, 60, 100], labels=['Child', 'Young Adult', 'Adult', 'Elderly'])
sns.barplot(x="AgeGroup", y="Survived", data=data)
plt.title("Survival Rate by Age Group")
plt.show()

sns.barplot(x="Embarked", y="Survived", data=data)
plt.title("Survival Rate by Embarked Port")
plt.show()

data['FamilySize'] = data['SibSp'] + data['Parch']
sns.barplot(x="FamilySize", y="Survived", data=data)
plt.title("Survival Rate by Family Size")
plt.show()

# Multiple Variable Analysis:
sns.pairplot(data, hue="Survived")
plt.title("Pair Plot of Age, Class, and Survival")
plt.show()
\
# Select only the numeric columns from your dataset
numeric_columns = data.select_dtypes(include=['int64', 'float64'])

# Create a correlation matrix for the numeric columns
corr_matrix = numeric_columns.corr()

# Visualize the correlation matrix
import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(10, 6))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm')
plt.title('Correlation Matrix')
plt.show()

